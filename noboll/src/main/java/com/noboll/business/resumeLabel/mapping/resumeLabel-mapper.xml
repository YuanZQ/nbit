<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 

    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace和定义的Mapper接口对应，并实现其中的方法 -->

<mapper namespace="com.noboll.business.resumeLabel.dao.ResumeLabelDao">

	<!-- id和mapper接口中的方法名对应，resultType使用mybatis.xml中的别名 -->	
	<select id="getEntity" parameterType="string"
		resultType="com.noboll.business.resumeLabel.entity.ResumeLabel" resultMap="resumeLabel.result">
        <![CDATA[
           	select p.*
			 from 
			 	resume_label p
			 where 
				 p.id = #{id} 
        ]]>
	</select>
	
	
	<update id="updateEntity" parameterType="com.noboll.business.resumeLabel.entity.ResumeLabel">
		update resume_label 
		set
			resume_id = #{resumeId},
			label_id = #{labelId},
			<include refid="system.user_value_update"></include>
		where id = #{id}
	</update>

	<insert id="saveEntity" parameterType="com.noboll.business.resumeLabel.entity.ResumeLabel">
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			<include refid="system.generatedId"></include>
		</selectKey>
		insert into resume_label
		(id, resume_id, label_id,delete_flag,<include refid="system.user_column_insert"></include>)
		values
		(#{id}, #{resumeId}, #{labelId},'0',<include refid="system.user_value_insert"></include>)
	</insert>

	<update id="deleteEntity" parameterType="string">
		update resume_label set
		delete_flag = '1'
		where id = #{id}
	</update>
	
	<select id="getList" resultType="list" parameterType="map"
		resultMap="resumeLabel.result">
		select p.*
	 	from 
		 	resume_label p
		where p.delete_flag = '0' 
		<if test="_parameter.containsKey('resumeId')">
			and p.resume_id LIKE CONCAT('%',
			CONCAT(#{resumeId,jdbcType=VARCHAR}, '%'))
		</if>
		<if test="_parameter.containsKey('labelId')">
			and p.label_id LIKE CONCAT('%',
			CONCAT(#{labelId,jdbcType=VARCHAR}, '%'))
		</if>
		order by p.create_time desc
	</select>
	
	<select id="getAllEntity" resultType="list"  parameterType="map" resultMap="resumeLabel.result">
    	select p.*
	 	from 
		 	resume_label p
    	where p.delete_flag='0'
    </select>
    
    <delete id="deleteByResumeId" parameterType="string">
		delete from resume_label where resume_id = #{resumeId}
	</delete>
    
     <!-- 批量新增到数据库 -->
	<insert id="batchInsert" parameterType="com.noboll.business.resumeLabel.entity.ResumeLabel">
		insert into resume_label
		(id,resume_id, label_id,delete_flag,create_time,create_user_id,last_modify_time,last_modify_user_id)
		values
		<foreach item="item" index="index" collection="list" 
                   open=" " separator="," close=" ">
        (
	        uuid(), #{item.resumeId}, #{item.labelId}, '0', CURRENT_TIMESTAMP(),#{item.createUserId},CURRENT_TIMESTAMP(), #{item.lastModifyUserId}
        )  
       </foreach>
	</insert>
	
	<select id="getByResumeId" resultType="list"  resultMap="resumeLabel.result">
    	select l.id,l.name
			 from 
			 	resume_label p
		left join label l on p.label_id =l.id and l.delete_flag='0'
    	where p.delete_flag='0' and p.resume_id = #{resumeId}
    </select>

</mapper>